# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- none

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'foster-thrive-service-connection'

  # Web app name
  #webAppName: 'foster-thrive-dev'
  webAppName: 'foster-thrive-stg'

  # Environment name
  #environmentName: 'dev'
  environmentName: 'stg'

  # Agent VM image name
  vmImageName: 'windows-2019'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'npm install, build and test'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

#- stage: Dev_Deploy
  #displayName: Deploy stage1 DEV
  #dependsOn: Build
  #condition: succeeded()
  #jobs:
  #- deployment: Deploy
    #displayName: DevDeploy
    #environment: $(environmentName)
    #pool:
      #vmImage: $(vmImageName)
    #strategy:
      #runOnce:
        #deploy:
          #steps:
          #- task: AzureWebApp@1
            #displayName: 'Multistage Stage 1: Dev'
            #inputs:
              #azureSubscription: $(azureSubscription)
              #appType: webApp
              #appName: $(webAppName)
              #runtimeStack: 'NODE|10.10'
              #package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              #startUpCommand: 'npm run start'
              
- stage: QA_Deploy
  displayName: Deploy stage2 QA
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: QA Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Multistage Stage 2: QA'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webApp
              appName: $(webAppName)
              runtimeStack: 'NODE|10.10'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'pm2 start --no-daemon --name foster-thrive /home/site/wwwroot/node_modules/next/dist/bin/next -- start --port 3000'
              deploymentMethod: 'zipDeploy'